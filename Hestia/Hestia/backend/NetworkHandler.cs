using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.Text;
using System.Net.Http;
using System.Threading.Tasks;
using System.Net;
using Flurl.Http;

namespace Hestia.backend
{
    /*
     * Note that the network handler in hestia android extends from application and uses serializable.
     * I have made sure that the package required for this is in the config, Application is something else though.
     */
    class NetworkHandler : ISerializable
    {
        private string ip;
        private int port;
        HttpClient client;

        public string Ip { get; set; }
        public int Port { get; set; }

        //Empty constructor for compiling.
        public NetworkHandler (string ip, int port, HttpClient client)
        {
            this.ip = ip;
            this.port = port;
            this.client = client;
        }

        public async Task<string> Get(string endpoint)
        {
            Uri uri = new Uri(GetDefaultUri() + endpoint);
            Console.WriteLine(uri.ToString());
            var response = await client.GetAsync(uri);

             if(response.IsSuccessStatusCode)
             {
                 Console.WriteLine("succes");
             }

            return "test";
        }

        public void post()
        {

        }

        public void delete()
        {

        } 

        public void put()
        {

        }

        private String GetDefaultUri()
        {
            return "https://" + ip + ":" + port + "/";
        }

        // Stub generated by serializable interface
        public void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            throw new NotImplementedException();
        }
    }
}
